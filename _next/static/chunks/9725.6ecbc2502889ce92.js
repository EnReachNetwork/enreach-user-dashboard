"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9725],{1911:function(e,t,o){o.d(t,{nY:function(){return y}});var r=o(43882),n=o(6082),a=o(28497),s=o(26393),i=o(57772),c=o(96005),l=o(994),u=o(42990),d=o(97392),k=o(91392),T=o(57750),p=o(76711);let g={async getTokenList(){let e=T.R.state.activeCaipNetwork,t=await k.L.fetchSwapTokens({chainId:e?.caipNetworkId});return t?.tokens?.map(e=>({...e,eip2612:!1,quantity:{decimals:"0",numeric:"0"},price:0,value:0}))||[]},async fetchGasPrice(){let e=T.R.state.activeCaipNetwork;if(!e)return null;try{if("solana"===e.chainNamespace){let e=(await p.ConnectionController?.estimateGas({chainNamespace:"solana"}))?.toString();return{standard:e,fast:e,instant:e}}return await k.L.fetchGasPrice({chainId:e.caipNetworkId})}catch{return null}},async fetchSwapAllowance({tokenAddress:e,userAddress:t,sourceTokenAmount:o,sourceTokenDecimals:r}){let n=await k.L.fetchSwapAllowance({tokenAddress:e,userAddress:t});if(n?.allowance&&o&&r){let e=p.ConnectionController.parseUnits(o,r)||0;return BigInt(n.allowance)>=e}return!1},async getMyTokensWithBalance(e){let t=d.AccountController.state.address,o=T.R.state.activeCaipNetwork;if(!t||!o)return[];let r=(await k.L.getBalance(t,o.caipNetworkId,e)).balances.filter(e=>"0"!==e.quantity.decimals);return d.AccountController.setTokenBalance(r,T.R.state.activeChain),this.mapBalancesToSwapTokens(r)},mapBalancesToSwapTokens:e=>e?.map(e=>({...e,address:e?.address?e.address:T.R.getActiveNetworkTokenAddress(),decimals:parseInt(e.quantity.decimals,10),logoUri:e.iconUrl,eip2612:!1}))||[]},m={getGasPriceInEther:(e,t)=>Number(t*e)/1e18,getGasPriceInUSD(e,t,o){let r=m.getGasPriceInEther(t,o);return a.C.bigNumber(e).times(r).toNumber()},getPriceImpact({sourceTokenAmount:e,sourceTokenPriceInUSD:t,toTokenPriceInUSD:o,toTokenAmount:r}){let n=a.C.bigNumber(e).times(t),s=a.C.bigNumber(r).times(o);return n.minus(s).div(n).times(100).toNumber()},getMaxSlippage(e,t){let o=a.C.bigNumber(e).div(100);return a.C.multiply(t,o).toNumber()},getProviderFee:(e,t=.0085)=>a.C.bigNumber(e).times(t).toString(),isInsufficientNetworkTokenForGas:(e,t)=>!!a.C.bigNumber(e).eq(0)||a.C.bigNumber(a.C.bigNumber(t||"0")).gt(e),isInsufficientSourceTokenForSwap(e,t,o){let r=o?.find(e=>e.address===t)?.quantity?.numeric;return a.C.bigNumber(r||"0").lt(e)},getToTokenAmount({sourceToken:e,toToken:t,sourceTokenPrice:o,toTokenPrice:r,sourceTokenAmount:n}){if("0"===n||!e||!t)return"0";let s=e.decimals,i=t.decimals;if(r<=0)return"0";let c=a.C.bigNumber(n).times(.0085),l=a.C.bigNumber(n).minus(c).times(a.C.bigNumber(10).pow(s)),u=a.C.bigNumber(o).div(r),d=s-i;return l.times(u).div(a.C.bigNumber(10).pow(d)).div(a.C.bigNumber(10).pow(i)).toFixed(i).toString()}};var h=o(89436),w=o(20090),v=o(29113),A=o(66879),b=o(48737);let S={initializing:!1,initialized:!1,loadingPrices:!1,loadingQuote:!1,loadingApprovalTransaction:!1,loadingBuildTransaction:!1,loadingTransaction:!1,fetchError:!1,approvalTransaction:void 0,swapTransaction:void 0,transactionError:void 0,sourceToken:void 0,sourceTokenAmount:"",sourceTokenPriceInUSD:0,toToken:void 0,toTokenAmount:"",toTokenPriceInUSD:0,networkPrice:"0",networkBalanceInUSD:"0",networkTokenSymbol:"",inputError:void 0,slippage:c.bq.CONVERT_SLIPPAGE_TOLERANCE,tokens:void 0,popularTokens:void 0,suggestedTokens:void 0,foundTokens:void 0,myTokensWithBalance:void 0,tokensPriceMap:{},gasFee:"0",gasPriceInUSD:0,priceImpact:void 0,maxSlippage:void 0,providerFee:void 0},f=(0,r.sj)(S),y={state:f,subscribe:e=>(0,r.Ld)(f,()=>e(f)),subscribeKey:(e,t)=>(0,n.VW)(f,e,t),getParams(){let e=T.R.state.activeCaipAddress,t=T.R.state.activeChain,o=l.j.getPlainAddress(e),r=T.R.getActiveNetworkTokenAddress(),n=w.ConnectorController.getConnectorId(t);if(!o)throw Error("No address found to swap the tokens from.");let i=!f.toToken?.address||!f.toToken?.decimals,c=!f.sourceToken?.address||!f.sourceToken?.decimals||!a.C.bigNumber(f.sourceTokenAmount).gt(0),u=!f.sourceTokenAmount;return{networkAddress:r,fromAddress:o,fromCaipAddress:e,sourceTokenAddress:f.sourceToken?.address,toTokenAddress:f.toToken?.address,toTokenAmount:f.toTokenAmount,toTokenDecimals:f.toToken?.decimals,sourceTokenAmount:f.sourceTokenAmount,sourceTokenDecimals:f.sourceToken?.decimals,invalidToToken:i,invalidSourceToken:c,invalidSourceTokenAmount:u,availableToSwap:e&&!i&&!c&&!u,isAuthConnector:n===s.b.CONNECTOR_ID.AUTH}},setSourceToken(e){if(!e){f.sourceToken=e,f.sourceTokenAmount="",f.sourceTokenPriceInUSD=0;return}f.sourceToken=e,this.setTokenPrice(e.address,"sourceToken")},setSourceTokenAmount(e){f.sourceTokenAmount=e},setToToken(e){if(!e){f.toToken=e,f.toTokenAmount="",f.toTokenPriceInUSD=0;return}f.toToken=e,this.setTokenPrice(e.address,"toToken")},setToTokenAmount(e){f.toTokenAmount=e?a.C.formatNumberToLocalString(e,6):""},async setTokenPrice(e,t){let o=f.tokensPriceMap[e]||0;o||(f.loadingPrices=!0,o=await this.getAddressPrice(e)),"sourceToken"===t?f.sourceTokenPriceInUSD=o:"toToken"===t&&(f.toTokenPriceInUSD=o),f.loadingPrices&&(f.loadingPrices=!1),this.getParams().availableToSwap&&this.swapTokens()},switchTokens(){if(f.initializing||!f.initialized)return;let e=f.toToken?{...f.toToken}:void 0,t=f.sourceToken?{...f.sourceToken}:void 0,o=e&&""===f.toTokenAmount?"1":f.toTokenAmount;this.setSourceToken(e),this.setToToken(t),this.setSourceTokenAmount(o),this.setToTokenAmount(""),this.swapTokens()},resetState(){f.myTokensWithBalance=S.myTokensWithBalance,f.tokensPriceMap=S.tokensPriceMap,f.initialized=S.initialized,f.sourceToken=S.sourceToken,f.sourceTokenAmount=S.sourceTokenAmount,f.sourceTokenPriceInUSD=S.sourceTokenPriceInUSD,f.toToken=S.toToken,f.toTokenAmount=S.toTokenAmount,f.toTokenPriceInUSD=S.toTokenPriceInUSD,f.networkPrice=S.networkPrice,f.networkTokenSymbol=S.networkTokenSymbol,f.networkBalanceInUSD=S.networkBalanceInUSD,f.inputError=S.inputError,f.myTokensWithBalance=S.myTokensWithBalance},resetValues(){let{networkAddress:e}=this.getParams(),t=f.tokens?.find(t=>t.address===e);this.setSourceToken(t),this.setToToken(void 0)},getApprovalLoadingState:()=>f.loadingApprovalTransaction,clearError(){f.transactionError=void 0},async initializeState(){if(!f.initializing){if(f.initializing=!0,!f.initialized)try{await this.fetchTokens(),f.initialized=!0}catch(e){f.initialized=!1,b.SnackController.showError("Failed to initialize swap"),A.RouterController.goBack()}f.initializing=!1}},async fetchTokens(){let{networkAddress:e}=this.getParams();await this.getTokenList(),await this.getNetworkTokenPrice(),await this.getMyTokensWithBalance();let t=f.tokens?.find(t=>t.address===e);t&&(f.networkTokenSymbol=t.symbol,this.setSourceToken(t),this.setSourceTokenAmount("1"))},async getTokenList(){let e=await g.getTokenList();f.tokens=e,f.popularTokens=e.sort((e,t)=>e.symbol<t.symbol?-1:e.symbol>t.symbol?1:0),f.suggestedTokens=e.filter(e=>!!c.bq.SWAP_SUGGESTED_TOKENS.includes(e.symbol),{})},async getAddressPrice(e){let t=f.tokensPriceMap[e];if(t)return t;let o=await k.L.fetchTokenPrice({addresses:[e]}),r=o?.fungibles||[],n=[...f.tokens||[],...f.myTokensWithBalance||[]],a=n?.find(t=>t.address===e)?.symbol,s=parseFloat((r.find(e=>e.symbol.toLowerCase()===a?.toLowerCase())?.price||0).toString());return f.tokensPriceMap[e]=s,s},async getNetworkTokenPrice(){let{networkAddress:e}=this.getParams(),t=await k.L.fetchTokenPrice({addresses:[e]}).catch(()=>(b.SnackController.showError("Failed to fetch network token price"),{fungibles:[]})),o=t.fungibles?.[0],r=o?.price.toString()||"0";f.tokensPriceMap[e]=parseFloat(r),f.networkTokenSymbol=o?.symbol||"",f.networkPrice=r},async getMyTokensWithBalance(e){let t=await u.y.getMyTokensWithBalance(e),o=u.y.mapBalancesToSwapTokens(t);o&&(await this.getInitialGasPrice(),this.setBalances(o))},setBalances(e){let{networkAddress:t}=this.getParams(),o=T.R.state.activeCaipNetwork;if(!o)return;let r=e.find(e=>e.address===t);e.forEach(e=>{f.tokensPriceMap[e.address]=e.price||0}),f.myTokensWithBalance=e.filter(e=>e.address.startsWith(o.caipNetworkId)),f.networkBalanceInUSD=r?a.C.multiply(r.quantity.numeric,r.price).toString():"0"},async getInitialGasPrice(){let e=await g.fetchGasPrice();if(!e)return{gasPrice:null,gasPriceInUSD:null};if(T.R.state?.activeCaipNetwork?.chainNamespace==="solana")return f.gasFee=e.standard??"0",f.gasPriceInUSD=a.C.multiply(e.standard,f.networkPrice).div(1e9).toNumber(),{gasPrice:BigInt(f.gasFee),gasPriceInUSD:Number(f.gasPriceInUSD)};{let t=e.standard??"0",o=BigInt(t),r=BigInt(15e4),n=m.getGasPriceInUSD(f.networkPrice,r,o);return f.gasFee=t,f.gasPriceInUSD=n,{gasPrice:o,gasPriceInUSD:n}}},async swapTokens(){let e=d.AccountController.state.address,t=f.sourceToken,o=f.toToken,r=a.C.bigNumber(f.sourceTokenAmount).gt(0);if(r||this.setToTokenAmount(""),!o||!t||f.loadingPrices||!r)return;f.loadingQuote=!0;let n=a.C.bigNumber(f.sourceTokenAmount).times(10**t.decimals).round(0);try{let r=await k.L.fetchSwapQuote({userAddress:e,from:t.address,to:o.address,gasPrice:f.gasFee,amount:n.toString()});f.loadingQuote=!1;let s=r?.quotes?.[0]?.toAmount;if(!s){h.AlertController.open({shortMessage:"Incorrect amount",longMessage:"Please enter a valid amount"},"error");return}let i=a.C.bigNumber(s).div(10**o.decimals).toString();this.setToTokenAmount(i),this.hasInsufficientToken(f.sourceTokenAmount,t.address)?f.inputError="Insufficient balance":(f.inputError=void 0,this.setTransactionDetails())}catch(e){f.loadingQuote=!1,f.inputError="Insufficient balance"}},async getTransaction(){let{fromCaipAddress:e,availableToSwap:t}=this.getParams(),o=f.sourceToken,r=f.toToken;if(e&&t&&o&&r&&!f.loadingQuote)try{let t;return f.loadingBuildTransaction=!0,t=await g.fetchSwapAllowance({userAddress:e,tokenAddress:o.address,sourceTokenAmount:f.sourceTokenAmount,sourceTokenDecimals:o.decimals})?await this.createSwapTransaction():await this.createAllowanceTransaction(),f.loadingBuildTransaction=!1,f.fetchError=!1,t}catch(e){A.RouterController.goBack(),b.SnackController.showError("Failed to check allowance"),f.loadingBuildTransaction=!1,f.approvalTransaction=void 0,f.swapTransaction=void 0,f.fetchError=!0;return}},async createAllowanceTransaction(){let{fromCaipAddress:e,sourceTokenAddress:t,toTokenAddress:o}=this.getParams();if(e&&o){if(!t)throw Error("createAllowanceTransaction - No source token address found.");try{let r=await k.L.generateApproveCalldata({from:t,to:o,userAddress:e}),n={data:r.tx.data,to:l.j.getPlainAddress(r.tx.from),gasPrice:BigInt(r.tx.eip155.gasPrice),value:BigInt(r.tx.value),toAmount:f.toTokenAmount};return f.swapTransaction=void 0,f.approvalTransaction={data:n.data,to:n.to,gasPrice:n.gasPrice,value:n.value,toAmount:n.toAmount},{data:n.data,to:n.to,gasPrice:n.gasPrice,value:n.value,toAmount:n.toAmount}}catch(e){A.RouterController.goBack(),b.SnackController.showError("Failed to create approval transaction"),f.approvalTransaction=void 0,f.swapTransaction=void 0,f.fetchError=!0;return}}},async createSwapTransaction(){let{networkAddress:e,fromCaipAddress:t,sourceTokenAmount:o}=this.getParams(),r=f.sourceToken,n=f.toToken;if(!t||!o||!r||!n)return;let a=p.ConnectionController.parseUnits(o,r.decimals)?.toString();try{let o=await k.L.generateSwapCalldata({userAddress:t,from:r.address,to:n.address,amount:a,disableEstimate:!0}),s=r.address===e,i=BigInt(o.tx.eip155.gas),c=BigInt(o.tx.eip155.gasPrice),u={data:o.tx.data,to:l.j.getPlainAddress(o.tx.to),gas:i,gasPrice:c,value:s?BigInt(a??"0"):BigInt("0"),toAmount:f.toTokenAmount};return f.gasPriceInUSD=m.getGasPriceInUSD(f.networkPrice,i,c),f.approvalTransaction=void 0,f.swapTransaction=u,u}catch(e){A.RouterController.goBack(),b.SnackController.showError("Failed to create transaction"),f.approvalTransaction=void 0,f.swapTransaction=void 0,f.fetchError=!0;return}},async sendTransactionForApproval(e){let{fromAddress:t,isAuthConnector:o}=this.getParams();f.loadingApprovalTransaction=!0;let r="Approve limit increase in your wallet";o?A.RouterController.pushTransactionStack({view:null,goBack:!0,onSuccess(){b.SnackController.showLoading(r)}}):b.SnackController.showLoading(r);try{await p.ConnectionController.sendTransaction({address:t,to:e.to,data:e.data,value:e.value,chainNamespace:"eip155"}),await this.swapTokens(),await this.getTransaction(),f.approvalTransaction=void 0,f.loadingApprovalTransaction=!1}catch(e){f.transactionError=e?.shortMessage,f.loadingApprovalTransaction=!1,b.SnackController.showError(e?.shortMessage||"Transaction error"),v.X.sendEvent({type:"track",event:"SWAP_APPROVAL_ERROR",properties:{message:e?.shortMessage||e?.message||"Unknown",network:T.R.state.activeCaipNetwork?.caipNetworkId||"",swapFromToken:this.state.sourceToken?.symbol||"",swapToToken:this.state.toToken?.symbol||"",swapFromAmount:this.state.sourceTokenAmount||"",swapToAmount:this.state.toTokenAmount||"",isSmartAccount:d.AccountController.state.preferredAccountTypes?.eip155===i.y_.ACCOUNT_TYPES.SMART_ACCOUNT}})}},async sendTransactionForSwap(e){if(!e)return;let{fromAddress:t,toTokenAmount:o,isAuthConnector:r}=this.getParams();f.loadingTransaction=!0;let n=`Swapping ${f.sourceToken?.symbol} to ${a.C.formatNumberToLocalString(o,3)} ${f.toToken?.symbol}`,s=`Swapped ${f.sourceToken?.symbol} to ${a.C.formatNumberToLocalString(o,3)} ${f.toToken?.symbol}`;r?A.RouterController.pushTransactionStack({view:"Account",goBack:!1,onSuccess(){b.SnackController.showLoading(n),y.resetState()}}):b.SnackController.showLoading("Confirm transaction in your wallet");try{let o=[f.sourceToken?.address,f.toToken?.address].join(","),n=await p.ConnectionController.sendTransaction({address:t,to:e.to,data:e.data,value:e.value,chainNamespace:"eip155"});return f.loadingTransaction=!1,b.SnackController.showSuccess(s),v.X.sendEvent({type:"track",event:"SWAP_SUCCESS",properties:{network:T.R.state.activeCaipNetwork?.caipNetworkId||"",swapFromToken:this.state.sourceToken?.symbol||"",swapToToken:this.state.toToken?.symbol||"",swapFromAmount:this.state.sourceTokenAmount||"",swapToAmount:this.state.toTokenAmount||"",isSmartAccount:d.AccountController.state.preferredAccountTypes?.eip155===i.y_.ACCOUNT_TYPES.SMART_ACCOUNT}}),y.resetState(),r||A.RouterController.replace("Account"),y.getMyTokensWithBalance(o),n}catch(e){f.transactionError=e?.shortMessage,f.loadingTransaction=!1,b.SnackController.showError(e?.shortMessage||"Transaction error"),v.X.sendEvent({type:"track",event:"SWAP_ERROR",properties:{message:e?.shortMessage||e?.message||"Unknown",network:T.R.state.activeCaipNetwork?.caipNetworkId||"",swapFromToken:this.state.sourceToken?.symbol||"",swapToToken:this.state.toToken?.symbol||"",swapFromAmount:this.state.sourceTokenAmount||"",swapToAmount:this.state.toTokenAmount||"",isSmartAccount:d.AccountController.state.preferredAccountTypes?.eip155===i.y_.ACCOUNT_TYPES.SMART_ACCOUNT}});return}},hasInsufficientToken:(e,t)=>m.isInsufficientSourceTokenForSwap(e,t,f.myTokensWithBalance),setTransactionDetails(){let{toTokenAddress:e,toTokenDecimals:t}=this.getParams();e&&t&&(f.gasPriceInUSD=m.getGasPriceInUSD(f.networkPrice,BigInt(f.gasFee),BigInt(15e4)),f.priceImpact=m.getPriceImpact({sourceTokenAmount:f.sourceTokenAmount,sourceTokenPriceInUSD:f.sourceTokenPriceInUSD,toTokenPriceInUSD:f.toTokenPriceInUSD,toTokenAmount:f.toTokenAmount}),f.maxSlippage=m.getMaxSlippage(f.slippage,f.toTokenAmount),f.providerFee=m.getProviderFee(f.sourceTokenAmount))}}},73356:function(e,t,o){o(88896)},91936:function(e,t,o){o(73543)},56736:function(e,t,o){var r=o(45352),n=o(46491);o(95789),o(39045);var a=o(73616),s=o(46454);o(518);var i=(0,r.iv)`
  :host {
    display: block;
  }

  :host > button {
    gap: var(--wui-spacing-xxs);
    padding: var(--wui-spacing-xs);
    padding-right: var(--wui-spacing-1xs);
    height: 40px;
    border-radius: var(--wui-border-radius-l);
    background: var(--wui-color-gray-glass-002);
    border-width: 0px;
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-002);
  }

  :host > button wui-image {
    width: 24px;
    height: 24px;
    border-radius: var(--wui-border-radius-s);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-010);
  }
`,c=function(e,t,o,r){var n,a=arguments.length,s=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,o):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,o,r);else for(var i=e.length-1;i>=0;i--)(n=e[i])&&(s=(a<3?n(s):a>3?n(t,o,s):n(t,o))||s);return a>3&&s&&Object.defineProperty(t,o,s),s};let l=class extends r.oi{constructor(){super(...arguments),this.text=""}render(){return(0,r.dy)`
      <button>
        ${this.tokenTemplate()}
        <wui-text variant="paragraph-600" color="fg-100">${this.text}</wui-text>
      </button>
    `}tokenTemplate(){return this.imageSrc?(0,r.dy)`<wui-image src=${this.imageSrc}></wui-image>`:(0,r.dy)`
      <wui-icon-box
        size="sm"
        iconColor="fg-200"
        backgroundColor="fg-300"
        icon="networkPlaceholder"
      ></wui-icon-box>
    `}};l.styles=[a.ET,a.ZM,i],c([(0,n.Cb)()],l.prototype,"imageSrc",void 0),c([(0,n.Cb)()],l.prototype,"text",void 0),c([(0,s.M)("wui-token-button")],l)},95789:function(e,t,o){var r=o(45352),n=o(46491),a=o(73616),s=o(46454),i=(0,r.iv)`
  :host {
    display: block;
    width: var(--local-width);
    height: var(--local-height);
  }

  img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center center;
    border-radius: inherit;
  }
`,c=function(e,t,o,r){var n,a=arguments.length,s=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,o):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,o,r);else for(var i=e.length-1;i>=0;i--)(n=e[i])&&(s=(a<3?n(s):a>3?n(t,o,s):n(t,o))||s);return a>3&&s&&Object.defineProperty(t,o,s),s};let l=class extends r.oi{constructor(){super(...arguments),this.src="./path/to/image.jpg",this.alt="Image",this.size=void 0}render(){return this.style.cssText=`
      --local-width: ${this.size?`var(--wui-icon-size-${this.size});`:"100%"};
      --local-height: ${this.size?`var(--wui-icon-size-${this.size});`:"100%"};
      `,(0,r.dy)`<img src=${this.src} alt=${this.alt} @error=${this.handleImageError} />`}handleImageError(){this.dispatchEvent(new CustomEvent("onLoadError",{bubbles:!0,composed:!0}))}};l.styles=[a.ET,a.Bp,i],c([(0,n.Cb)()],l.prototype,"src",void 0),c([(0,n.Cb)()],l.prototype,"alt",void 0),c([(0,n.Cb)()],l.prototype,"size",void 0),c([(0,s.M)("wui-image")],l)}}]);